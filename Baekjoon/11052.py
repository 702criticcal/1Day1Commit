N = int(input())
# 편의를 위해 리스트 앞에 0을 추가하여 N과 리스트 인덱스를 맞춰주었다.
P = [0] + list(map(int, input().split()))
# N = 1의 경우, 1개짜리 카드팩을 사는 방법 뿐.
P[1] = P[1]
# N = 2의 경우, 1개짜리 카드팩 2개를 사는 방법과 2개짜리 카드팩을 사는 방법이 있다.
P[2] = max(P[2], P[1] * 2)

for i in range(3, N + 1):
    # N개의 카드를 사는 방법은 N개짜리 카드팩을 사는 법, N-1개짜리 카드팩과 1개짜리 카드팩을 사는 법, 1개짜리 카드팩을 N개 사는 법 등이 있다.
    # 다이나믹 프로그래밍적으로 접근할 경우,
    # N - 1의 경우에 1개짜리 카드팩을 더 사면 N의 경우에 해당하고, N - 2의 경우에 2개짜리 카드팩을 더 사면 N의 경우에 해당한다.
    # 점화식으로 표현할 경우, P[N] = max(P[i] + P[i-j]) (i + j = N)로 나타낼 수 있다.
    for j in range(1, i // 2 + 1):
        P[i] = max(P[i], P[j] + P[i - j])
print(P[N])
